@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div id="studentForm">
    <table>
        <tr>
            <td>
                <form>
                    <input type="text" id="Id" name="Id" placeholder="Student ID" />
                    <input type="text" id="FirstName" name="FirstName" placeholder="First Name" />
                    <input type="text" id="LastName" name="LastName" placeholder="Last Name" />
                    <input type="text" id="Pin" name="Pin" placeholder="Pin" />
                    <input type="text" id="Balance" name="Balance" placeholder="Balance" />
                    <input type="text" id="University" name="University" placeholder="Student University" />
                    <b id="Avatar" name = "Avatar">111</b>
                </form>
            </td>
            <td>
                <img id="image-preview" style="width:80px" class="rounded rounded-circle" alt="placeholder" />
                <form id="uploadForm" enctype="multipart/form-data">
                    <label>Avatar</label>
                    <input id="file" type="file" name="file" class="form-control" accept="image/*"
                           onchange="updatePreview(this, 'image-preview')" />
                    <button id="upload" type="button" onclick="upload_avatar()">Upload Avata</button>
                </form>
            </td>
            <td>
                <button id="search" onclick="search()">Search</button>
                <button id="insert" onclick="insert()">Insert</button>
                <button id="deleteStu" onclick="deleteStu()">Delete</button>
                <button id="update" onclick="update()">Update</button>
                <button id="generate_DB" onclick="generate_DB()">Generating a database</button>
            </td>
        </tr>
    </table>

</div>
<script>

     function updatePreview(input, target) {
        let file = input.files[0];
        let reader = new FileReader();

        reader.readAsDataURL(file);
        reader.onload = function () {
            let img = document.getElementById(target);
            // can also use "this.result"
            img.src = reader.result;
        }
    }

    function search() {
        $.ajax({
            url: '/students/search/' + $('#Id').val(),
            type: 'get',
            contentType: 'application/json',
            processData: false,
            success: function (data, textStatus, jQxhr) {
                var obj = JSON.parse(data);
                $("#FirstName").val(obj.FirstName);
                $("#LastName").val(obj.LastName);
                $("#Pin").val(obj.Pin);
                $("#Balance").val(obj.Balance);
                $("#University").val(obj.University);
                $("#Avatar").val(obj.Avatar);
                // get avarta
                get_avatar()
            },
            error: function (xhr, textStatus, error) {
                alert("Error: " + xhr.responseText);
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

    function insert() {
        $.ajax({
            type: 'POST',
            url: '/students/insert/',
            contentType: 'application/json',
            data: JSON.stringify(
                {
                    "Id": $('#Id').val(),
                    "AcctNum": $('#Id').val(),
                    "Pin": $("#Pin").val(),
                    "Balance": $("#Balance").val(),
                    "FirstName": $("#FirstName").val(),
                    "LastName": $("#LastName").val(),
                    "University": $("#University").val()
                }),
            success: function (data, textStatus, jQxhr) {
                alert("Data Inserted");
            },
            error: function (xhr, textStatus, error) {
                alert("Error: " + xhr.responseText);
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

    function deleteStu() {
        $.ajax({
            url: '/students/delete/' + $('#Id').val(),
            type: 'delete',
            contentType: 'application/json',
            processData: false,
            success: function (data, textStatus, jQxhr) {
                alert("Data Dleted");
            },
            error: function (xhr, textStatus, error) {
                alert("Error: " + xhr.responseText);
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

    function update() {
        $.ajax({
            type: 'PUT',
            url: '/students/update/',
            contentType: 'application/json',
            data: JSON.stringify(
                {
                    "Id": $('#Id').val(),
                    "AcctNum": $('#Id').val(),
                    "Pin": $("#Pin").val(),
                    "Balance": $("#Balance").val(),
                    "FirstName": $("#FirstName").val(),
                    "LastName": $("#LastName").val(),
                    "University": $("#University").val()
                }),
            success: function (data, textStatus, jQxhr) {
                alert("Data Updated");
            },
            error: function (xhr, textStatus, error) {
                alert("Error: " + xhr.responseText);
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

    function generate_DB() {
        $.ajax({
            type: 'GET',
            url: '/students/generateDB/',
            success: function (data, textStatus, jQxhr) {
                alert("DB generated");
            },
            error: function (xhr, textStatus, error) {
                alert("Error: " + xhr.responseText);
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

    function get_avatar() {
        /*
        // Simulate a call to Dropbox or other service that can
        // return an image as an ArrayBuffer.
        var xhr = new XMLHttpRequest();

        // Use JSFiddle logo as a sample image to avoid complicating
        // this example with cross-domain issues.
        xhr.open("GET", "http://fiddle.jshell.net/img/logo.png", true);

        // Ask for the result as an ArrayBuffer.
        xhr.responseType = "arraybuffer";

        xhr.onload = function (e) {
            // Obtain a blob: URL for the image data.
            var arrayBufferView = new Uint8Array(this.response);
            var blob = new Blob([arrayBufferView], { type: "image/jpeg" });
            var urlCreator = window.URL || window.webkitURL;
            var imageUrl = urlCreator.createObjectURL(blob);
            var img = document.querySelector("#image-preview");
            img.src = imageUrl;
        };
       
        xhr.send(); */
        
        $.ajax({
            url: '/students/profile/',
            type: 'get',
            data: 'path=' + $('#Avatar').val(),
            processData: false,
            contentType: false,
            success: function (data) {
               $("#image-preview").attr("src", data);
            },
            error: function (xhr, textStatus, error) {
                alert("Error: " + xhr.responseText);
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
        
    }

    // 

    function upload_avatar() {
        //var formData = new FormData();
        //formData.append("file", $("#file")[0].files[0]);
        var formData = new FormData();
        var files = $('#file')[0].files;

        // Check file selected or not
        if (files.length > 0) {
            formData.append('file', files[0]);
        }

        $.ajax({
            url: '/students/UploadFiles/' + $('#Id').val(),
            type: 'post',
            data: formData,
            processData: false,
            contentType: false,
            //dataType: 'text',
            success: function (data) {
                var params = JSON.parse(data)
                $("#img").attr("src", params);
            },
            error: function (xhr, textStatus, error) {
                alert("Error: " + xhr.responseText);
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

</script>